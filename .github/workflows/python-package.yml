name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8,3.9]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test with pytest
      run: |
        pip install -r tests/requirements.txt
        coverage run -m pytest --junitxml=coverage-reports/coverage.xml

    #- name: Generate reports
    #  run: |
    #    coverage report
    #    coverage xml -o coverage-reports/coverage.xml
    #    coverage html

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  package:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: 3.9
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Increment Version - if same as prior commit
      run: |
        VERSION_CHANGE=$(${GITHUB_WORKSPACE}/.github/workflows/diff_script.sh)
        echo "VERSION_CHANGE=$VERSION_CHANGE" >> $GITHUB_ENV
        echo "VERSION=$(cat VERSION)" >>$GITHUB_ENV

    - name: Commit Updated Version File
      if: env.VERSION_CHANGE == 1
      uses: EndBug/add-and-commit@v7.4.0
      with:
        add: 'VERSION'
        message: 'Updated VERSION file to version ${{ env.VERSION }}'

    - name: Set Tag Name
      id: set_tag
      run: |
        TAG="release-${{ env.VERSION }}"
        echo "TAG=$TAG" >>$GITHUB_ENV
        git tag $TAG
        git push origin --tags

    - name: create package
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade build
        python -m build

    - name: create package
      run: |
        pip install --user --upgrade setuptools wheel pkutils
        python setup.py sdist bdist_wheel

    - name: Update Github Page
      run: |
        mkdir public
        cat >public/index.md <<EOL
        ## Python Package Index

        Page provides py Index for TestHelper
    
        [test_helper-${{ env.VERSION }}](git+$GITHUB_SERVER_URL/$GITHUB_REPOSITORY#egg=test_helper-$PACKAGE_VER)
        EOL

    - name: Deploy to GitHub Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: public
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG }}
        release_name: ${{ env.TAG }}
        body: |
          Changes in this Release
        draft: false
        prerelease: false
